@page "/admin/transactions"
@using Mandarin.Services
@using System.Reactive.Linq
@using System.Reactive.Threading.Tasks
@using Mandarin.Models.Transactions
@inject ITransactionService TransactionService;

<EditForm EditContext="@EditContext">
  <Card Class="mb-4">
    <CardHeader>
      <CardTitle>Show Transactions - Select Date Range</CardTitle>
    </CardHeader>
    <CardBody>
      <Fields>
        <Field ColumnSize="ColumnSize.Is6">
          <FieldLabel>Start Date</FieldLabel>
          <DateEdit TValue="DateTime" @bind-Date="StartDate" />
        </Field>
        <Field ColumnSize="ColumnSize.Is6">
          <FieldLabel>End Date</FieldLabel>
          <DateEdit TValue="DateTime" @bind-Date="EndDate" />
        </Field>
      </Fields>

      <CardActions>
        <Button Color="Color.Primary" Clicked="@OnUpdateTransactions" Disabled="@IsLoading">Update</Button>
      </CardActions>
    </CardBody>
  </Card>
</EditForm>

@if (AllTransactions != null)
{
  <Card Class="mb-4">
    <CardHeader>
      <CardTitle>Found @(AllTransactions.Count) transactions</CardTitle>
    </CardHeader>
    <CardBody>
      <DataGrid Data="@AllTransactions" @bind-SelectedRow="@SelectedTransaction" Striped="true">
        <DataGridColumn TItem="Transaction" Field="Timestamp" Caption="Transaction Time" DisplayFormat="{0:F}" />
        <DataGridNumericColumn TItem="Transaction" Field="TotalAmount" Caption="Total Amount" DisplayFormat="{0:C}" />
      </DataGrid>
    </CardBody>
  </Card>
}

@if (SelectedTransaction?.Subtransactions != null)
{
  <Card Class="mb-4">
    <CardHeader>
      <CardTitle>Items sold in sale at @(SelectedTransaction.Timestamp)</CardTitle>
    </CardHeader>
    <CardBody>
      <DataGrid Data="@SelectedTransaction.Subtransactions" Striped="true">
        <DataGridColumn TItem="Subtransaction" Field="Product.ProductCode" Caption="Product Code" TextAlignment="TextAlignment.Left" />
        <DataGridColumn TItem="Subtransaction" Field="Product.ProductName" Caption="Name" TextAlignment="TextAlignment.Left" />
        <DataGridColumn TItem="Subtransaction" Field="TransactionUnitPrice" Caption="Unit Price" DisplayFormat="{0:C}" TextAlignment="TextAlignment.Right" />
        <DataGridColumn TItem="Subtransaction" Field="Quantity" Caption="Quantity" TextAlignment="TextAlignment.Right" />
        <DataGridColumn TItem="Subtransaction" Field="Subtotal" Caption="Subtotal" DisplayFormat="{0:C}" TextAlignment="TextAlignment.Right" />
      </DataGrid>
    </CardBody>
  </Card>
}

@code
{
  private bool IsLoading { get; set; } = false;
  private IList<Transaction> AllTransactions { get; set; }
  private Transaction SelectedTransaction { get; set; } = null;

  private EditContext EditContext { get; set; }
  private DateTime StartDate { get; set; } = DateTime.Today.AddDays(-1);
  private DateTime EndDate { get; set; } = DateTime.Today;

  /// <inheritdoc />
  protected override void OnInitialized()
  {
    EditContext = new EditContext(this);
  }

  private async Task OnUpdateTransactions()
  {
    try
    {
      IsLoading = true;
      AllTransactions = await TransactionService.GetAllTransactions(StartDate, EndDate)
                                                .ToList()
                                                .ToTask();
    }
    finally
    {
      IsLoading = false;
      StateHasChanged();
    }
  }

  private Task OnSelect(Transaction transaction)
  {
    this.SelectedTransaction = transaction;
    return Task.CompletedTask;
  }

}
