@page "/admin/sales"
@using Mandarin.Services
@using System.Reactive.Linq
@using System.Reactive.Threading.Tasks
@using Mandarin.Models.Commissions
@inject ICommissionService CommissionService;

<EditForm EditContext="@EditContext">
  <RadzenDatePicker @bind-Value="StartDate" DateFormat="d" />
  <RadzenDatePicker @bind-Value="EndDate" DateFormat="d" />

  <RadzenButton Click="UpdateTransactionsAsync" disabled="@IsLoading">Update</RadzenButton>
</EditForm>

<RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="15"
            AllowSorting="true" Data="@Commissions" ColumnWidth="200px" Value="@SelectedCommission" RowSelect="@((ArtistSales commission) => OnSelect(commission))">
  <Columns>
    <RadzenGridColumn TItem="ArtistSales" Property="StockistCode" Title="Artist Code" />
    <RadzenGridColumn TItem="ArtistSales" Property="Name" Title="Name" />
    <RadzenGridColumn TItem="ArtistSales" Property="Rate" Title="Commission Rate" FormatString="{0:P}" />
    <RadzenGridColumn TItem="ArtistSales" Property="Subtotal" Title="Subtotal" FormatString="{0:C}" />
    <RadzenGridColumn TItem="ArtistSales" Property="CommissionTotal" Title="Commission" FormatString="{0:C}" />
    <RadzenGridColumn TItem="ArtistSales" Property="Total" Title="Total" FormatString="{0:C}" />
  </Columns>
</RadzenGrid>

@if (SelectedCommission != null)
{
  <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="15"
              AllowSorting="true" Data="@SelectedCommission.Sales" ColumnWidth="200px">
    <Columns>
      <RadzenGridColumn TItem="Sale" Property="ProductCode" Title="Product Code" />
      <RadzenGridColumn TItem="Sale" Property="ProductName" Title="Product Name" />
      <RadzenGridColumn TItem="Sale" Property="Quantity" Title="Quantity" />
      <RadzenGridColumn TItem="Sale" Property="UnitPrice" Title="Unit Price" FormatString="{0:C}" />
      <RadzenGridColumn TItem="Sale" Property="Commission" Title="Commission" FormatString="{0:C}" />
      <RadzenGridColumn TItem="Sale" Property="Subtotal" Title="Subtotal" FormatString="{0:C}" />
      <RadzenGridColumn TItem="Sale" Property="Total" Title="Total" FormatString="{0:C}" />
    </Columns>
  </RadzenGrid>
}

@code
{
  private bool IsLoading { get; set; } = false;
  private IList<ArtistSales> Commissions { get; set; } = new List<ArtistSales>();
  private ArtistSales SelectedCommission { get; set; } = null;

  private EditContext EditContext { get; set; }
  private DateTime StartDate { get; set; } = DateTime.Today.AddDays(-1);
  private DateTime EndDate { get; set; } = DateTime.Today;

  protected override void OnInitialized()
  {
    EditContext = new EditContext(this);
  }

  private async Task UpdateTransactionsAsync()
  {
    try
    {
      IsLoading = true;
      Commissions = await CommissionService.GetSalesByArtistForPeriod(StartDate, EndDate)
                                           .ToList()
                                           .ToTask();
    }
    finally
    {
      IsLoading = false;
      StateHasChanged();
    }
  }

  private Task OnSelect(ArtistSales commission)
  {
    this.SelectedCommission = commission;
    return Task.CompletedTask;
  }

}
