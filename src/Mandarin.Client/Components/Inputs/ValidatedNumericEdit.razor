@inherits ValidatedEditBase
@typeparam TValue

<Validation Validator="@OnValidate">
  <Field ColumnSize="@ColumnSize">
    @if (Label != null)
    {
      <FieldLabel>@Label</FieldLabel>
    }
    <Addons>
      <Addon AddonType="AddonType.Start">
        <AddonLabel>@AddonLabel</AddonLabel>
      </Addon>
      <Addon AddonType="AddonType.Body">
        <NumericEdit @attributes="@AdditionalAttributes"
                     Disabled="@Disabled" Max="@Max" Min="@Min" ReadOnly="@ReadOnly" Value="@Value" ValueChanged="@ValueChanged">
          <Feedback>
            <ValidationError>
              <ValidationMessage For="@For" />
            </ValidationError>
          </Feedback>
        </NumericEdit>
      </Addon>
    </Addons>
  </Field>
</Validation>

@code {
  /// <summary>
  /// Gets or sets the label to be associated to the input.
  /// </summary>
  [Parameter]
  public string Label { get; set; }

  /// <summary>
  /// Gets or sets the addon label to be associated to the input.
  /// </summary>
  [Parameter]
  public string AddonLabel { get; set; }

  /// <summary>
  /// Gets or sets the value of the ValueEdit.
  /// </summary>
  [Parameter]
  public TValue Value { get; set; }

  /// <summary>
  /// Gets or sets the callback to be called when <see cref="Value"/> changes.
  /// </summary>
  [Parameter]
  public EventCallback<TValue> ValueChanged { get; set; }

  /// <summary>
  /// Gets or sets the optional ColumnSize to associate to the Field.
  /// </summary>
  [Parameter]
  public IFluentColumn ColumnSize { get; set; }

  /// <summary>
  /// Gets or sets the minimum value for the input.
  /// </summary>
  [Parameter]
  public TValue Min { get; set; }

  /// <summary>
  /// Gets or sets the maximum value for the input.
  /// </summary>
  [Parameter]
  public TValue Max { get; set; }
}
