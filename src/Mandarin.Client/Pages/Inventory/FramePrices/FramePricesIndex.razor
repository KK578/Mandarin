@page "/inventory/frame-prices"
@using System.Reactive.Linq
@inherits ReactiveInjectableComponentBase<IFramePricesIndexViewModel>

<Card>
  <CardHeader>
    <CardTitle>Frame Prices</CardTitle>
    <CardActions Float="Float.End">
      <ReactiveButton ReactiveCommand="@ViewModel!.EditSelected" Color="Color.Secondary">Edit</ReactiveButton>
      <ReactiveButton ReactiveCommand="@ViewModel!.CreateNew" Color="Color.Primary">New</ReactiveButton>
    </CardActions>
  </CardHeader>
  <CardBody>
    @if (ViewModel!.IsLoading)
    {
      <MandarinProgressBar>Loading Data...</MandarinProgressBar>
    }
    else
    {
      <DataGrid Data="@ViewModel!.Rows" Filterable="true" Striped="true" Responsive="true"
                ShowPager="true" PagerPosition="DataGridPagerPosition.Top" PageSize="15"
                RowSelectable="@(_ => true)" @bind-SelectedRow="@ViewModel!.SelectedRow">
        <DataGridColumn TItem="IFramePriceViewModel" Caption="Product Code" Field="@(nameof(IFramePriceViewModel.ProductCode))" TextAlignment="TextAlignment.Start" />
        <DataGridColumn TItem="IFramePriceViewModel" Caption="Product Name" Field="@(nameof(IFramePriceViewModel.ProductName))" TextAlignment="TextAlignment.Start" />
        <DataGridNumericColumn TItem="IFramePriceViewModel" Caption="Retail Price" Field="@(nameof(IFramePriceViewModel.RetailPrice))" TextAlignment="TextAlignment.End" DisplayFormat="{0:C}" />
        <DataGridNumericColumn TItem="IFramePriceViewModel" Caption="Frame Price" Field="@(nameof(IFramePriceViewModel.FramePrice))" TextAlignment="TextAlignment.End" DisplayFormat="{0:C}" />
        <DataGridNumericColumn TItem="IFramePriceViewModel" Caption="Artist Price" Field="@(nameof(IFramePriceViewModel.ArtistPrice))" TextAlignment="TextAlignment.End" DisplayFormat="{0:C}" />
      </DataGrid>
    }
  </CardBody>
</Card>

@code {

  /// <inheritdoc />
  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
    await ViewModel!.LoadData.Execute();
  }

}
